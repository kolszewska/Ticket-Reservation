<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.olszewska.ticket.reservation"/>

    <jpa:repositories base-package="com.olszewska.ticket.reservation.repository"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:/application.properties"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${dataSource.driverClassName}"/>
        <property name="url"
                  value="${dataSource.url}"/>
        <property name="username" value="${dataSource.username}"/>
        <property name="password" value="${dataSource.password}"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="${entityManagerFactory.persistenceUnitName}"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="${entityManagerFactory.showSql}"/>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.dialect" value="${entityManagerFactory.hibernate.dialect}"/>
                <entry key="hibernate.hbm2ddl.auto" value="${entityManagerFactory.hibernate.hbm2ddl.auto}"/>
                <entry key="hibernate.format_sql" value="${entityManagerFactory.hibernate.format_sql}"/>
            </map>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="username" value="${mailSender.username}"/>
        <property name="password" value="${mailSender.password}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.ssl.trust">${mailSender.ssl.trust}</prop>
                <prop key="mail.smtp.host">${mailSender.host}</prop>
                <prop key="mail.smtp.port">${mailSender.port}</prop>
                <prop key="mail.smtp.auth">${mailSender.auth}</prop>
                <prop key="mail.smtp.starttls.enable">${mailSender.starttls.enable}</prop>
            </props>
        </property>
    </bean>

</beans>
